Universal C Library: Array Construct

Copyright © 2019 ARQADIUM, LLC
All rights reserved.

§1. #UNI_ARRAY
---------------

Type-like shorthand for array structs of a given type. Be sure to declare it
using one of the DECL_* macros first.

Variables of this type have two properties, accessible by dot notation:
 1. val: the array itself, as a pointer to the given type
 2. sz: the size of the array, expressed as the number of elements allocated

§2. #UNI_ARRAYP
----------------

Like §1, but for arrays of pointer types. Necessary for token pasting to work.

§3. #UNI_DECL_ARR{_S,_P,_SP,}
------------------

Declare an array type of another type, in the type namespace (no prefixes). If
the ‘_S’ suffix is used, prepend a ‘struct’ keyword for the type. If the ‘_P’
suffix is used, make it a pointer to the type name. If ‘_SP’ is appended, make
it a pointer to the type and also prepend the ‘struct’ keyword. These variants
are needed to prevent token pasting from being broken by asterisks and spaces.
It is possible to use typedefs instead, but this choice is left up to the API
user as their types will need to be declared as such.

§4. #UNI_DECL_ARR_S
--------------------

Declare an array type of another struct type, in the struct namespace.

§5. STRUCT UNI_VEC
-------------------

Structure for keeping information about a vector.

This structure offers four member variables:
 1. sz: the occupied size of the vector array, in number of elements
 2. cap: the available memory of the vector array, in number of elements
 3. elem_sz: the size of a single element, in bytes
 4. data: a pointer to the vector array data

If sz > 0 and cap == 0, then the vector has been dwarfed as a slice. Reserve
operations cannot be performed on slices, and this includes calls to
uni_vec_reserve(). Also forbidden on slices are calls to uni_vec_emplace()
which either shift elements or cause reallocation: the only permitted
emplacements are 1:1, ergo the new data size is the same as the size of the
range provided. If a fully-fledged vector object is needed, uni_vec_dup() may
be used to copy the slice into a new object.
